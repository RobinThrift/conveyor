.offcanvas-modal-overlay {
    @apply fixed left-0 top-0 bottom-0 right-0 flex items-center justify-center;
    background-color: color-mix(
        in srgb,
        var(--color-modal-overlay-bg) 80%,
        transparent
    );
    z-index: 9999;
    backdrop-filter: blur(2px);
    transition: background-color 200ms, backdrop-filter 200ms;

    &[data-entering] {
        background-color: transparent;
        backdrop-filter: blur(0px);
    }

    &[data-exiting] {
        background-color: transparent;
        backdrop-filter: blur(0px);
    }
}

.offcanvas-modal {
    @apply animate-in slide-in-from-left ease-linear duration-200;
    @apply h-full rounded-r-lg bg-surface-level-1 shadow-md;
    @apply fixed left-0 top-0 bottom-0 right-0;

    width: 90dvw;

    z-index: 10000;

    &[data-exiting] {
        @apply animate-out slide-out-to-left ease-linear duration-200;
    }
}

.offcanvas {
    @apply focus:outline-hidden overflow-auto h-full p-2;
}

.offcanvas-drag-handle {
    position: absolute;
    right: 0;
    top: 0;
    width: 20%;
    height: 100%;
    z-index: 10000;
    touch-action: none;
}

.offcanvas-backdrop {
    @apply fixed inset-0;
    background-color: color-mix(
        in srgb,
        var(--color-modal-overlay-bg) 80%,
        transparent
    );
    z-index: 9999;
    transition: opacity 250ms;
    opacity: 1;
    backdrop-filter: blur(2px);

    &[data-entering] {
        opacity: 0;
    }

    &[data-exiting] {
        opacity: 0;
    }
}

:root {
    main {
        transition: all 200ms;
    }

    &:has(.offcanvas-backdrop) main {
        transform: perspective(1000px) translateZ(-5px);
    }

    &:has(.offcanvas-backdrop[data-exiting]) main {
        transform: perspective(1000px) translateZ(0px);
    }
}
