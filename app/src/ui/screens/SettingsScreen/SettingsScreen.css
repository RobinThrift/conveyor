.settings-dialog {
    @apply border border-subtle-extra-light dark:border-subtle-extra-dark p-0!;

    .dialog-close {
        @apply right-2 top-3 xs:right-3;
    }

    @media (min-width: 768px) {
        @apply max-w-6xl;
        width: 100%;
        height: 80svh;
    }
}

@property --sync-indicator-angle {
    syntax: "<angle>";
    initial-value: 45deg;
    inherits: false;
}

.settings-dialog:has(.is-syncing) {
    overflow: visible;
    overscroll-behavior: contain;
    &::before {
        @apply rounded-2xl inset-0 border-2 border-primary;
        display: block;
        content: "";
        position: absolute;
        pointer-events: none;
        animation: sync-rotate-border 5s linear infinite;
        mask:
            conic-gradient(#000 0 0) content-box,
            linear-gradient(
                var(--sync-indicator-angle),
                #0000 30%,
                #000 40% 60%,
                #0000 70%
            )
            subtract,
            conic-gradient(#000 0 0) padding-box;
    }
}

@keyframes sync-rotate-border {
    from {
        --sync-indicator-angle: 0deg;
    }

    to {
        --sync-indicator-angle: 360deg;
    }
}

.settings-screen {
    @apply h-full flex flex-col relative;
    h1 {
        @apply w-full text-3xl p-3 xs:p-5 xs:py-4 relative;
    }
}

.settings-tabs {
    @apply flex flex-col xs:flex-row flex-1 border-t max-h-full overflow-hidden;
    @apply border-subtle-extra-light dark:border-subtle-extra-dark;
}

.settings-tab-list {
    @apply w-fit p-2 flex items-center space-x-2 overflow-auto max-w-full xs:max-w-none;
    @apply xs:border-r xs:block xs:flex-col xs:space-y-2;
    @apply border-subtle-extra-light dark:border-subtle-extra-dark;
}

.settings-tab-list-item {
    @apply flex items-center gap-2 cursor-pointer py-1 px-1 border-b-3 border-transparent min-w-fit;
    @apply xs:px-3 xs:border-0 xs:rounded-lg;

    &:hover {
        @apply border-b-3 border-primary-light text-primary;
        @apply xs:bg-primary-light xs:text-primary-contrast xs:border-0;

        .icon {
            @apply text-primary;
            @apply xs:text-primary-contrast;
        }
    }

    .icon {
        @apply text-subtle;
    }

    &[data-selected] {
        @apply border-b-3 border-primary text-primary;
        @apply xs:bg-primary-light xs:text-primary-contrast xs:border-0;
        .icon {
            @apply text-primary;
            @apply xs:text-primary-contrast;
        }
    }
}

.settings-tab {
    @apply pt-2 pb-12 px-2 xs:px-4 space-y-4 flex-1 relative overflow-auto flex-1;

    h2 {
        @apply flex gap-2 items-center w-full text-2xl font-semibold;
    }

    .select-input {
        @apply bg-surface-level-2;

        &[data-pressed] {
            background-color: color-mix(
                in srgb,
                var(--color-surface-level-2) 97%,
                black
            );
        }
    }

    .checkbox-field {
        @apply flex justify-between items-center p-2 gap-2 rounded-lg shadow h-fit;
        @apply bg-surface-level-1 text-text border w-full;
        @apply border-subtle-extra-light dark:border-subtle-extra-dark;

        label {
            @apply flex-1;
        }

        &:hover {
            @apply shadow-lg border-primary;
        }

        .checkbox {
            @apply rounded-full;
        }

        &[data-selected] {
            @apply border-primary-dark bg-primary text-primary-contrast;

            .checkbox {
                @apply border-primary-dark;
            }
        }
    }
}

.settings-section-header {
    @apply flex gap-2 items-center w-full text-xl mb-2.5;
}

.settings-disclosure-group-item {
    h3 button {
        @apply flex items-center gap-2 cursor-pointer;

        /* biome-ignore lint/style/noDescendingSpecificity: false positive due to  nesting */
        .icon {
            transition: transform 200ms;
        }

        &[aria-expanded="false"] {
            .icon {
                transform: rotate(-90deg);
            }
        }
    }
}

.api-tokens-list {
    @apply border border-subtle-extra-light rounded bg-surface-level-2 divide-y divide-subtle-extra-light;

    .api-token {
        @apply p-2 flex items-center justify-between;
    }

    .api-token-info {
        @apply flex-1;
    }

    .api-token-name {
        @apply block;
    }

    .api-token-expires-at,
    .api-token-created-at {
        @apply text-sm text-subtle-dark;
        span:first-child {
            @apply me-1;
        }
    }

    .api-token-created-at {
        /* biome-ignore lint/style/noDescendingSpecificity: false positive due to  nesting */
        &::before {
            @apply mx-1;
            display: inline;
            content: "â€¢";
        }
    }
}

.theme-selection {
    @apply space-y-4;
}

.theme-selection-label {
    @apply flex mb-2 text-sm font-medium;
}

.theme-selection-items {
    @apply bg-surface-level-2 rounded-3xl;
    @apply grid auto-cols-auto grid-flow-col gap-1 items-center justify-stretch w-full;
}

.theme-selection-item {
    @apply rounded-2xl border border-surface-level-2;
    @apply flex gap-2 items-center justify-center p-1 text-sm cursor-pointer text-subtle-extra-dark;
    @apply dark:text-subtle-light;

    &:hover {
        @apply text-text;
        @apply bg-surface-level-1 border-subtle-extra-light;
    }

    &[aria-checked="true"] {
        @apply text-primary font-semibold;
        @apply bg-surface-level-1 border-subtle-extra-light;
        @apply dark:text-primary-light dark:border-subtle;
    }
}

.theme-mode-transition {
    view-transition-name: theme-mode-transition;
}

:root::view-transition-old(theme-mode-transition) {
    display: block !important;
    pointer-events: none;
}

:root::view-transition-new(theme-mode-transition) {
    animation: theme-mode-transition 250ms linear !important;
    animation-delay: 10ms;
    pointer-events: none;
}

@keyframes theme-mode-transition {
    0% {
        clip-path: circle(0%);
        opacity: 0;
    }

    100% {
        clip-path: circle(100%);
        opacity: 1;
    }
}
