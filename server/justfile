local_bin  := absolute_path("../.bin")
version    := env_var_or_default("VERSION", "dev")

go_ldflags := env_var_or_default("GO_LDFLAGS", "") + " -X 'go.robinthrift.com/conveyor/internal.Version=" + version + "'"
go_buildflags := env_var_or_default("GO_BUILD_FLAGS", "-trimpath")
go_test_reporter := env("GO_TEST_REPORTER", "pkgname-and-test-fails")
go_lint_reporter := env("GO_LINT_REPORTER", "")

_default:
    @just --list

# run the binary locally and restart on file changes
run: (_install-tool "watchexec")
    @mkdir -p test/manual
    @CONVEYOR_LOG_LEVEL="debug" CONVEYOR_LOG_FORMAT="console" \
        CONVEYOR_ADDR="localhost:8081" \
        CONVEYOR_SECURE_COOKIES="false" \
        CONVEYOR_DATABASE_PATH="./test/manual/conveyor.db" \
        CONVEYOR_DATABASE_DEBUG_ENABLED="true" \
        CONVEYOR_BLOBS_DIR="./test/manual/blobs" \
        CONVEYOR_INIT_USERNAME="user" \
        CONVEYOR_INIT_PASSWORD="password" \
        {{ local_bin }}/watchexec -r -e go -- go run -trimpath -tags dev ./bin/conveyor

run-prod:
    cd ../app && just install build
    rm -rf internal/ingress/app/assets
    cp -r ../app/build internal/ingress/app/assets
    touch internal/ingress/app/assets/.gitkeep
    just build
    rm -rf internal/ingress/app/assets
    mkdir internal/ingress/app/assets
    touch internal/ingress/app/assets/.gitkeep
    @CONVEYOR_LOG_LEVEL="debug" CONVEYOR_LOG_FORMAT="console" \
        CONVEYOR_ADDR="localhost:8081" \
        CONVEYOR_DATABASE_PATH="./test/manual/conveyor.db" \
        CONVEYOR_DATABASE_DEBUG_ENABLED="true" \
        CONVEYOR_BLOBS_DIR="./test/manual/blobs" \
        CONVEYOR_INIT_USERNAME="user" \
        CONVEYOR_INIT_PASSWORD="password" \
        ./build/conveyor

_run-for-e2e-test:
    #!/usr/bin/env bash
    set -eux
    set -o pipefail
    TEMPDIR=$(mktemp -d)
    trap "rm -rf $TEMPDIR" EXIT SIGHUP SIGINT SIGQUIT SIGTERM
    export CONVEYOR_LOG_LEVEL="debug"
    export CONVEYOR_LOG_FORMAT="console"
    export CONVEYOR_ADDR="localhost:8081"
    export CONVEYOR_DATABASE_PATH="$TEMPDIR/conveyor.db"
    export CONVEYOR_BLOBS_DIR="$TEMPDIR/blobs"
    export CONVEYOR_DATABASE_DEBUG_ENABLED="true"
    export CONVEYOR_INIT_USERNAME="user"
    export CONVEYOR_INIT_PASSWORD="pls-change-e2e-tests"
    go run -trimpath -tags dev ./bin/conveyor

build:
    go build -ldflags="{{go_ldflags}}" {{ go_buildflags }} -o build/conveyor ./bin/conveyor

export_report := env_var_or_default("EXPORT_REPORT", "false")
test *flags="-v -failfast -timeout 15m ./...": (_install-tool "gotestsum")
    {{ local_bin }}/gotestsum \
        {{ if export_report == "true" { "--junitfile 'tests.junit.xml' --junitfile-project-name 'go.robinthrift.com/conveyor' --junitfile-hide-empty-pkg" } else { "" } }} \
        --format {{ go_test_reporter }} \
        --format-hide-empty-pkg \
        -- {{ go_buildflags }} {{ flags }}

test-watch *flags="-v -failfast -timeout 15m ./...": (_install-tool "gotestsum")
    {{ local_bin }}/gotestsum --format {{ go_test_reporter }} --format-hide-empty-pkg --watch -- {{ go_buildflags }} {{ flags }}

# lint using golangci-lint
lint: (_install-tool "golangci-lint") (_install-tool "sqlc") (_install-tool "vacuum")
    {{ local_bin }}/golangci-lint run {{ go_lint_reporter }} --fix ./...
    {{ local_bin }}/sqlc -f internal/storage/database/sqlite/sqlc.yaml vet
    cd ../api && {{ local_bin }}/vacuum lint --ruleset ../.scripts/vacuum.yaml --details --fail-severity warn --no-banner --all-results *.openapi3.yaml

fmt:
    @go fmt ./...

new-migration name: (_install-tool "goose")
    {{ local_bin }}/goose -table migrations -dir internal/storage/database/sqlite/migrations sqlite3 tmp.db create {{ name }} sql

generate: _gen-sql _gen-api-server-stubs

clean:
    rm -rf build
    go clean -cache

_gen-sql: (_install-tool "sqlc")
    {{ local_bin }}/sqlc generate -f internal/storage/database/sqlite/sqlc.yaml

_gen-api-server-stubs: (_install-tool "oapi-codegen")
    {{ local_bin }}/oapi-codegen -generate types,std-http-server,strict-server -o ./internal/ingress/syncv1/router_gen.go -package syncv1 ../api/sync.v1.openapi3.yaml
    {{ local_bin }}/oapi-codegen -generate types,std-http-server,strict-server -o ./internal/ingress/authv1/router_gen.go -package authv1 ../api/auth.v1.openapi3.yaml
    {{ local_bin }}/oapi-codegen \
        -import-mapping ./sync.v1.openapi3.yaml:go.robinthrift.com/conveyor/internal/ingress/syncv1 \
        -generate types,std-http-server,strict-server \
        -o ./internal/ingress/memosv1/router_gen.go \
        -package memosv1 \
        ../api/memos.v1.openapi3.yaml
    sed -i '' -e '1s;^;//lint:file-ignore ST1005 Ignore because generated code\n//lint:file-ignore SA1029 Ignore because generated code\n;' \
            ./internal/ingress/syncv1/router_gen.go \
            ./internal/ingress/memosv1/router_gen.go \
            ./internal/ingress/authv1/router_gen.go
    go fmt ./...

_install-tool tool:
    @cd ../.scripts/toolfetcher && go run . -to {{ local_bin }} -versionfile ../TOOL_VERSIONS {{ tool }}
